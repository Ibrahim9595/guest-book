{"version":3,"sources":["logo.svg","logic/context/user-context.js","utils/validate.js","components/CustomForm/CustomForm.jsx","components/CustomInputField/CustomInputField.jsx","screens/LoginScreen/index.jsx","logic/HttpHelper.js","screens/SignupScreen/index.jsx","screens/Authentication/index.jsx","components/MessageWriter/MessageWriter.jsx","components/Loading/Loading.jsx","components/Status/Status.jsx","components/Message/Message.jsx","components/NavBar/NavBar.jsx","components/Modal/Modal.jsx","screens/GuestBook/index.jsx","App.js","serviceWorker.js","logic/context/UserContextProvider.jsx","index.js"],"names":["module","exports","UserContext","React","createContext","user","_id","name","token","loading","loginError","signupError","signupSuccess","login","email","password","register","logout","validationHelpers","required","val","undefined","length","string","number","array","object","maxLength","minLength","above","threshold","below","test","equal","str","validate","obj","rules","messages","inValidElements","Object","keys","forEach","valKey","errors","every","rule","split","ruleKey","rest","func","ret","push","CustomForm","props","isValid","values","el","a","setState","validateAsync","key","value","validSync","state","err","newErrors","handleChange","event","target","handleBlur","dirty","setFormSubmitting","submitting","reset","initialValues","submit","preventDefault","onSubmit","this","children","PureComponent","CustomInputField","onChange","erros","className","htmlFor","label","map","error","Login","userContext","useContext","placeholder","onBlur","type","disabled","httpHelper","baseUrl","uri","method","body","fetch","JSON","stringify","mode","headers","response","ok","Error","json","endPoint","_requestBuilder","data","Signup","get","alert","repeatPassword","sinupSuccess","Authentication","useState","currentPage","setCurrentPage","toggle","onClick","href","setMessage","e","saveMessage","onSave","message","_","MessageWriter","initialMessage","height","style","Loading","Status","status","onDelete","onUpdate","showControls","isEditing","setEditing","text","src","avatar","logo","alt","title","color","Message","messageWithReplies","onMessageUpdate","onMessageDelete","onReplyUpdate","loadingReplies","onReplyCreate","onReplyDelete","onLoadReply","showReplyControls","replies","reply","updating","NavBar","userName","onLogout","onWriteMessage","Modal","onClose","GuestBook","loadMessages","then","catch","createMessage","oldState","Date","now","user_id","post","newMessage","loadReplies","messageId","newMessageIndex","findIndex","newMessages","newReplies","updateMessage","put","deleteMessage","window","confirm","delete","splice","updateReply","newText","newReplyIndex","newReply","deleteReply","createRely","toggleModal","showModal","context","contextType","App","Boolean","location","hostname","match","UserContextProvider","setUser","setLoading","setLoginError","setSignupError","setSignupSuccess","useEffect","localStorage","getItem","getUser","setItem","removeItem","Provider","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.c26d84d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nexport const UserContext = React.createContext({\r\n    user: {\r\n        _id: '',\r\n        name: '',\r\n        token: '',\r\n    },\r\n    loading: false,\r\n    loginError: null,\r\n    signupError: null,\r\n    signupSuccess: null,\r\n    login: (email, password) => { },\r\n    register: (name, email, password) => { },\r\n    logout: () => { },\r\n});","const validationHelpers = {\r\n    required: (val) => val !== null && val !== undefined && val.length > 0,\r\n    string: (val) => typeof (val) === 'string',\r\n    number: (val) => typeof (val) === 'number',\r\n    array: (val) => typeof (val) === 'object' && typeof (val.length) === 'number',\r\n    object: (val) => typeof (val) === 'object' && typeof (val.length) === 'undefined',\r\n    maxLength: (val, length) => val.length <= length,\r\n    minLength: (val, length) => val.length >= length,\r\n    above: (val, threshold) => typeof (val) === 'number' && val > threshold,\r\n    below: (val, threshold) => typeof (val) === 'number' && val < threshold,\r\n    email: (val) => /^[-_.0-9a-zA-Z]+@[0-9a-zA-Z]+\\.[0-9a-zA-Z]+$/.test(val),\r\n    equal: (val, str) => val === str,\r\n}\r\n\r\n/**\r\n * The function validate an object against rules object and return the invalid elements\r\n * \r\n * @param {Object} obj \r\n * @param {{[key: string]: Array<string>}} rules \r\n * \r\n * @returns Array<string>\r\n */\r\nexport const validate = (obj, rules, messages = {}) => {\r\n    const inValidElements = {};\r\n    // Get all value keys [email, password] etc\r\n    Object.keys(rules).forEach(valKey => {\r\n        const errors = [];\r\n        // use the value keys to get the actual rules [required, string] etc\r\n        const elementValid = rules[valKey].every(rule => {\r\n            // split for the key value rule [minLength, 10]\r\n            const [ruleKey, ...rest] = rule.split(':');\r\n            // Check if this rulekey belongs to a valid rule\r\n            const func = validationHelpers[ruleKey];\r\n            if (func) {\r\n                let ret = false;\r\n                // Add Equal rule to match passwordRepeat\r\n                if (ruleKey === 'equal') {\r\n                    let val = obj[rest[0]];\r\n                    ret = func(obj[valKey], val);\r\n                } else {\r\n                    ret = func(obj[valKey], ...rest)\r\n                }\r\n\r\n                if (!ret) errors.push(messages[`${valKey}.${ruleKey}`] ?\r\n                    messages[`${valKey}.${ruleKey}`] : `${valKey}.${ruleKey}`)\r\n                return ret;\r\n            } else {\r\n                return true;\r\n            }\r\n        })\r\n\r\n        if (!elementValid) inValidElements[valKey] = errors;\r\n    });\r\n\r\n    return inValidElements;\r\n}","import React from 'react'\r\n\r\nexport class CustomForm extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            values: props.initialValues || {},\r\n            dirty: {},\r\n            errors: {},\r\n            isValid: false,\r\n            submitting: false,\r\n        }\r\n    }\r\n\r\n    isValid = (errors) => Object.values(errors).every(el => el.length === 0);\r\n\r\n    validate = async (values) => {\r\n        const errors = typeof (this.props.validate) === 'function' ? (this.props.validate(values) || {}) : {}\r\n\r\n        this.setState({ errors, isValid: this.isValid(errors) });\r\n    }\r\n\r\n    validateAsync = async (key, value) => {\r\n        // Check if the target is valid using the sync rules only if the local validataion success will validate through\r\n        const validSync = !this.state.errors[key];\r\n\r\n        if (typeof (this.props.validateAsync) === 'function' && validSync) {\r\n            this.setState({ isValid: false });\r\n            const err = await this.props.validateAsync(key, value);\r\n            const newErrors = { ...this.state.errors, ...err };\r\n\r\n            this.setState({ errors: newErrors, isValid: this.isValid(newErrors) });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            values: { ...this.state.values, [event.target.name]: event.target.value },\r\n        }, () => {\r\n            this.validate(this.state.values);\r\n        });\r\n    }\r\n\r\n    handleBlur = (event) => {\r\n        const key = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({\r\n            dirty: { ...this.state.dirty, [key]: true }\r\n        }, () => this.validateAsync(key, value))\r\n    }\r\n\r\n    setFormSubmitting = (val) => {\r\n        this.setState({ submitting: val })\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ values: this.props.initialValues });\r\n    }\r\n\r\n    submit = (event) => {\r\n        event.preventDefault()\r\n        if (typeof (this.props.onSubmit) === 'function' && this.state.isValid) {\r\n            this.props.onSubmit({\r\n                setFormSubmitting: this.setFormSubmitting,\r\n                values: this.state.values,\r\n                reset: this.reset\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.submit}>\r\n                {typeof (this.props.children) === 'function' ? this.props.children({\r\n                    handleChange: this.handleChange,\r\n                    handleBlur: this.handleBlur,\r\n                    reset: this.reset,\r\n                    values: this.state.values,\r\n                    submitting: this.state.submitting,\r\n                    errors: this.state.errors,\r\n                    dirty: this.state.dirty,\r\n                    isValid: this.state.isValid\r\n                }) : <span>You should pass a function that returns JSX elements</span>}\r\n            </form>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './CustomInputField.css'\r\n\r\nexport const CustomInputField = ({ onChange, value, erros, name, ...props }) => (\r\n    <div className=\"input-field-wrapper\">\r\n        <label htmlFor={name}>{props.label}</label>\r\n        <input {...props} className='input' value={value} name={name} onChange={onChange} />\r\n        {(erros || []).map(error => (\r\n            <span key={error} className=\"input-field-error\">{error}</span>\r\n        ))}\r\n    </div>\r\n);","import React from 'react'\r\nimport './index.css';\r\nimport { validate } from '../../utils/validate';\r\nimport { CustomForm } from '../../components/CustomForm/CustomForm';\r\nimport { CustomInputField } from '../../components/CustomInputField/CustomInputField';\r\nimport { UserContext } from '../../logic/context/user-context';\r\n\r\nconst Login = () => {\r\n    const userContext = React.useContext(UserContext);\r\n\r\n    return (\r\n        <CustomForm\r\n            initialValues={{\r\n                email: '',\r\n                password: '',\r\n            }}\r\n            onSubmit={({ values }) => {\r\n                userContext.login(values.email, values.password);\r\n            }}\r\n            validate={(values) =>\r\n                validate(values, {\r\n                    email: ['required', 'email'],\r\n                    password: ['required', 'minLength:8'],\r\n                })\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                errors,\r\n                dirty,\r\n                isValid,\r\n            }) => (\r\n                    <>\r\n                        {userContext.error && <span className=\"error-span\">Wrong user name or password</span>}\r\n                        <CustomInputField label='Email' erros={\r\n                            dirty.email ? errors.email : []\r\n                        }\r\n                            value={values.email}\r\n                            placeholder='Write your Email'\r\n                            name='email' onChange={handleChange} onBlur={handleBlur}\r\n                        />\r\n                        <CustomInputField label='Password' type='password' erros={\r\n                            dirty.password ? errors.password : []\r\n                        }\r\n                            value={values.password}\r\n                            placeholder='Password at least 8 characters'\r\n                            name='password' onChange={handleChange} onBlur={handleBlur}\r\n                        />\r\n                        <button className='submit-button' type='submit' disabled={!isValid || userContext.loading}>Submit</button>\r\n                    </>\r\n                )}\r\n        </CustomForm>\r\n    )\r\n}\r\n\r\nexport default Login;","class HttpHelper {\r\n    constructor(baseUrl) {\r\n        this.baseUrl = baseUrl;\r\n    }\r\n\r\n    async _requestBuilder(uri, method, token, body) {\r\n        const response = await fetch(uri, {\r\n            method,\r\n            body: JSON.stringify(body),\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        });\r\n\r\n        if (!response.ok) throw new Error((await response.json()).error);\r\n\r\n        return await response.json();\r\n    }\r\n\r\n    async get(endPoint, token = '') {\r\n        const response = await this._requestBuilder(`${this.baseUrl}/${endPoint}`, 'GET', token);\r\n        return response.data;\r\n    }\r\n\r\n    async post(endPoint, data, token = '') {\r\n        const response = await this._requestBuilder(`${this.baseUrl}/${endPoint}`, 'POST', token, data);\r\n        return response.data;\r\n    }\r\n\r\n    async put(endPoint, data, token = '') {\r\n        const response = await this._requestBuilder(`${this.baseUrl}/${endPoint}`, 'PUT', token, data);\r\n        return response.data;\r\n    }\r\n\r\n    async delete(endPoint, token = '') {\r\n        const response = await this._requestBuilder(`${this.baseUrl}/${endPoint}`, 'DELETe', token);\r\n        return response.data;\r\n    }\r\n}\r\n\r\nexport const httpHelper = new HttpHelper('');","import React from 'react'\r\nimport './index.css';\r\nimport { validate } from '../../utils/validate';\r\nimport { CustomForm } from '../../components/CustomForm/CustomForm';\r\nimport { CustomInputField } from '../../components/CustomInputField/CustomInputField';\r\nimport { useContext } from 'react';\r\nimport { UserContext } from '../../logic/context/user-context';\r\nimport { httpHelper } from '../../logic/HttpHelper';\r\n\r\nconst Signup = () => {\r\n    const userContext = useContext(UserContext);\r\n\r\n    const validateAsync = async (key, value) => {\r\n        if (key === 'email') {\r\n            try {\r\n                const response = await httpHelper.get(`email_exist/${value}`);\r\n                if (response) return { email: ['Email Already Exist'] };\r\n                else return {};\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        }\r\n        return {};\r\n    }\r\n\r\n    return (\r\n        <CustomForm\r\n            initialValues={{\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                repeatPassword: '',\r\n            }}\r\n\r\n            onSubmit={({ values, reset }) => {\r\n                userContext.register(values.name, values.email, values.password);\r\n                reset();\r\n            }}\r\n\r\n            validate={(values) =>\r\n                validate(values, {\r\n                    name: ['required'],\r\n                    email: ['required', 'email'],\r\n                    password: ['required', 'minLength:8'],\r\n                    repeatPassword: ['required', 'equal:password']\r\n                })\r\n            }\r\n\r\n            validateAsync={validateAsync}\r\n        >\r\n            {({\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                errors,\r\n                dirty,\r\n                isValid,\r\n            }) => (\r\n                    <>\r\n                        {userContext.signupError && <span className=\"error-span\">{userContext.signupError}</span>}\r\n                        {userContext.sinupSuccess && <span className=\"success-span\">{userContext.sinupSuccess}</span>}\r\n\r\n                        <CustomInputField label='Full Name' erros={\r\n                            dirty.name ? errors.name : []\r\n                        }\r\n                            value={values.name}\r\n                            placeholder='Write your Full Name'\r\n                            name='name' onChange={handleChange} onBlur={handleBlur}\r\n                        />\r\n                        <CustomInputField label='Email' erros={\r\n                            dirty.email ? errors.email : []\r\n                        }\r\n                            value={values.email}\r\n                            placeholder='Write your Email'\r\n                            name='email' onChange={handleChange} onBlur={handleBlur}\r\n                        />\r\n                        <CustomInputField label='Password' type='password' erros={\r\n                            dirty.password ? errors.password : []\r\n                        }\r\n                            value={values.password}\r\n                            placeholder='Password at least 8 characters'\r\n                            name='password' onChange={handleChange} onBlur={handleBlur}\r\n                        />\r\n                        <CustomInputField label='Repeat password' type='password' erros={\r\n                            dirty.repeatPassword ? errors.repeatPassword : []\r\n                        }\r\n                            value={values.repeatPassword}\r\n                            placeholder='Repeat your password'\r\n                            name='repeatPassword' onChange={handleChange} onBlur={handleBlur}\r\n                        />\r\n                        <button className='submit-button' type='submit' disabled={!isValid || userContext.loading}>Submit</button>\r\n                    </>\r\n                )}\r\n        </CustomForm>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport './index.css'\r\n\r\nimport Login from '../LoginScreen';\r\nimport Signup from '../SignupScreen';\r\n\r\n\r\nconst Authentication = () => {\r\n    const [currentPage, setCurrentPage] = React.useState('LOGIN');\r\n\r\n    const toggle = () => {\r\n        const nextPage = currentPage === 'LOGIN' ? 'SIGNUP' : 'LOGIN';\r\n        setCurrentPage(nextPage);\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-page-wrapper\">\r\n            <div className=\"login-page\">\r\n                <div className=\"form\">\r\n                    {\r\n                        currentPage === 'LOGIN' && (\r\n                            <div>\r\n                                <Login />\r\n                                <p className=\"message\">Not registered? <button onClick={toggle} href=\"#\">Create an account</button></p>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    {\r\n                        currentPage === 'SIGNUP' && (\r\n                            <div>\r\n                                <Signup />\r\n                                <p className=\"message\">Already registered? <button onClick={toggle} href=\"#\">Sign In</button></p>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Authentication;","import React from 'react';\r\nimport './MessageWriter.css';\r\nimport { useState } from 'react';\r\n\r\nconst handleChange = (setMessage) => (e) => e.target.value.length <= 150 ? setMessage(e.target.value) : null;\r\nconst saveMessage = (setMessage, onSave, message) => _ => {\r\n    onSave(message);\r\n    setMessage('');\r\n}\r\n\r\nexport const MessageWriter = ({ initialMessage, onSave, height, placeholder }) => {\r\n    const [message, setMessage] = useState(initialMessage);\r\n\r\n    return (\r\n        <div className='message-writter-wrapper' style={{ height: height ? `${height}px` : '50px' }}>\r\n            <input className=\"message-writter\" value={message}\r\n                onChange={handleChange(setMessage)}\r\n                placeholder={placeholder ? placeholder : 'Write something nice...'} />\r\n\r\n            <button className=\"message-writter-save\"\r\n                disabled={message.length === 0}\r\n                onClick={saveMessage(setMessage, onSave, message)}\r\n            >\r\n                Send <span>{message.length}/150</span>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './Loading.css';\r\n\r\nexport const Loading = _ => (\r\n    <div className=\"app-loading-container\">\r\n        <div className=\"app-loading-indicator\"></div>\r\n    </div>\r\n)","import React from 'react';\r\nimport './Status.css';\r\nimport logo from '../../logo.svg';\r\nimport { MessageWriter } from '../MessageWriter/MessageWriter';\r\nimport { Loading } from '../Loading/Loading';\r\n\r\nexport const Status = ({ status, onDelete, onUpdate, loading, showControls }) => {\r\n    const [isEditing, setEditing] = React.useState(false)\r\n    const { text, user } = status;\r\n    \r\n    return isEditing ?\r\n        <MessageWriter onSave={(message) => {\r\n            setEditing(false);\r\n            onUpdate(message, status)\r\n        }} initialMessage={text} />\r\n        :\r\n        (\r\n            <div className='status-wrapper'>\r\n                {loading &&\r\n                    <div className=\"loading\">\r\n                        <Loading />\r\n                    </div>\r\n                }\r\n                <div className=\"header\">\r\n                    <div className=\"left-section\">\r\n                        <div className=\"avatar\">\r\n                            <img src={user.avatar ? user.avatar : logo} alt=\"avatar\" />\r\n                        </div>\r\n                        <div className=\"user-info-section\">\r\n                            <span className=\"user-name\">{user.name}</span>\r\n                            <span className=\"user-email\">{user.email}</span>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        showControls && (\r\n                            <div className=\"right-section\">\r\n                                <button className=\"action-button\" onClick={() => setEditing(true)} title=\"Edit\" style={{ color: '#ebe83c' }}>&#9998;</button>\r\n                                <button className=\"action-button\" onClick={() => onDelete(status)} title=\"Delete\" style={{ color: 'red' }}>&#10008;</button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"main-section\">{text}</div>\r\n            </div>\r\n        )\r\n}","import React from 'react';\r\nimport './Message.css';\r\nimport { Status } from '../Status/Status';\r\nimport { MessageWriter } from '../MessageWriter/MessageWriter';\r\nimport { Loading } from '../Loading/Loading';\r\n\r\nexport const Message = ({\r\n    messageWithReplies, onMessageUpdate,\r\n    onMessageDelete, onReplyUpdate, loadingReplies,\r\n    onReplyCreate, onReplyDelete, onLoadReply,\r\n    loading, showControls, showReplyControls\r\n}) => {\r\n    const { replies, ...message } = messageWithReplies;\r\n\r\n    return (\r\n        <div className=\"message-wrapper\">\r\n            {loading &&\r\n                <div className=\"loading\">\r\n                    <Loading />\r\n                </div>\r\n            }\r\n            <div className=\"message\">\r\n                <Status\r\n                    status={message} onDelete={onMessageDelete} onUpdate={(text) => onMessageUpdate(text, message)}\r\n                    showControls={showControls}\r\n                />\r\n            </div>\r\n            <div className=\"message-writter\">\r\n                <MessageWriter placeholder='Reply to message...' initialMessage=''\r\n                    onSave={(reply) => onReplyCreate(message._id, reply)} />\r\n            </div>\r\n            <div className=\"replies\">\r\n                {replies.map(reply => (\r\n                    <Status\r\n                        loading={reply.updating}\r\n                        key={reply._id}\r\n                        status={reply} onDelete={onReplyDelete} onUpdate={onReplyUpdate}\r\n                        showControls={showReplyControls(reply)}\r\n                    />\r\n                ))}\r\n                <div className=\"load-more\">\r\n                    {loadingReplies ?\r\n                        <button disabled>Loading ...</button> :\r\n                        <button onClick={() => onLoadReply(message._id)}>load replies</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","\nimport React from 'react';\nimport './NavBar.css';\n\nconst NavBar = ({ userName, onLogout, onWriteMessage }) => (\n\t<div className=\"nav-bar\">\n\t\t<div className=\"nav-bar-left\">\n\t\t\t<button className=\"action-buttons\" onClick={onWriteMessage} title=\"Write Message\">✎</button>\n\t\t</div>\n\t\t<div className=\"logo-container\">\n\t\t\t<span className=\"heavy\">Guest Book</span>\n\t\t</div>\n\t\t<div className=\"nav-bar-right\">\n\t\t\t<button className=\"action-buttons\" disabled>{userName || ''}</button>\n\t\t\t<button className=\"action-buttons\" onClick={onLogout} title=\"Logout\">✗</button>\n\t\t</div>\n\t</div>\n);\n\nexport default NavBar;\n","import React from 'react';\r\nimport './Modal.css';\r\n\r\nexport const Modal = ({ onClose, children }) => (\r\n    <div className=\"write-message-modal\">\r\n        <div className=\"content-wrapper\">\r\n            <div className=\"header\">\r\n                <button className=\"action-button\" onClick={onClose}>X</button>\r\n            </div>\r\n            <div className=\"content\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    </div>\r\n);","import React from 'react';\r\nimport './index.css';\r\nimport { Message } from '../../components/Message/Message';\r\nimport { httpHelper } from '../../logic/HttpHelper';\r\nimport { MessageWriter } from '../../components/MessageWriter/MessageWriter';\r\nimport { UserContext } from '../../logic/context/user-context';\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport { Modal } from '../../components/Modal/Modal';\r\n\r\nexport default class GuestBook extends React.PureComponent {\r\n    static contextType = UserContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: false,\r\n            showModal: false,\r\n            messages: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.user = this.context.user;\r\n        this.loadMessages();\r\n    }\r\n\r\n    loadMessages = () => {\r\n        this.setState({ loading: true });\r\n        httpHelper.get('message', this.user.token)\r\n            .then(messages => this.setState({ messages, loading: false }))\r\n            .catch(error => {\r\n                alert(error);\r\n                this.setState({ loading: false })\r\n            })\r\n    }\r\n\r\n    createMessage = (message) => {\r\n        const oldState = { ...this.state };\r\n        this.setState({\r\n            messages: [{\r\n                _id: Date.now(),\r\n                text: message,\r\n                user: this.user,\r\n                user_id: this.user._id,\r\n                replies: [],\r\n                updating: true\r\n            }, ...this.state.messages]\r\n        })\r\n\r\n        httpHelper.post('message', { text: message }, this.user.token)\r\n            .then(newMessage => {\r\n                this.setState({ messages: [newMessage, ...oldState.messages] })\r\n            }).catch(err => {\r\n                alert(err);\r\n                this.setState(oldState);\r\n            })\r\n    }\r\n\r\n    loadReplies = (messageId) => {\r\n        const oldState = { ...this.state };\r\n        const newMessageIndex = this.state.messages.findIndex(el => el._id === messageId);\r\n        const newMessages = [...this.state.messages];\r\n        newMessages[newMessageIndex] = { ...newMessages[newMessageIndex], loadingReplies: true };\r\n        this.setState({ messages: newMessages });\r\n\r\n        httpHelper.get(`message/${messageId}/replies`, this.user.token)\r\n            .then(newReplies => {\r\n                newMessages[newMessageIndex] = {\r\n                    ...newMessages[newMessageIndex], loadingReplies: false, replies: newReplies\r\n                }\r\n                this.setState({\r\n                    messages: [...newMessages]\r\n                });\r\n            }).catch(err => {\r\n                alert(err);\r\n                this.setState(oldState);\r\n            })\r\n    }\r\n\r\n    updateMessage = (text, message) => {\r\n        const oldState = { ...this.state };\r\n        const newMessageIndex = this.state.messages.findIndex(el => el._id === message._id);\r\n        const newMessages = [...this.state.messages];\r\n        newMessages[newMessageIndex] = { ...newMessages[newMessageIndex], updating: true };\r\n        this.setState({ messages: newMessages });\r\n\r\n        httpHelper.put(`message/${message._id}`, { text }, this.user.token)\r\n            .then(message => {\r\n                newMessages[newMessageIndex] = { ...newMessages[newMessageIndex], ...message, updating: false };\r\n                this.setState({ messages: [...newMessages] })\r\n            }).catch(error => {\r\n                alert(error)\r\n                this.setState(oldState);\r\n            })\r\n    }\r\n\r\n    deleteMessage = (message) => {\r\n        if (!window.confirm('Are you sure you want to delete this message?')) return;\r\n        const oldState = { ...this.state };\r\n        const newMessageIndex = this.state.messages.findIndex(el => el._id === message._id);\r\n        const newMessages = [...this.state.messages];\r\n        newMessages[newMessageIndex] = { ...newMessages[newMessageIndex], updating: true };\r\n        this.setState({ messages: newMessages });\r\n\r\n        httpHelper.delete(`message/${message._id}`, this.user.token)\r\n            .then(_ => {\r\n                newMessages.splice(newMessageIndex, 1);\r\n                this.setState({ messages: [...newMessages] })\r\n            }).catch(error => {\r\n                alert(error)\r\n                this.setState(oldState);\r\n            })\r\n    }\r\n\r\n    updateReply = (message, newText, reply) => {\r\n        const oldState = { ...this.state };\r\n        const newMessageIndex = this.state.messages.findIndex(el => el._id === message._id);\r\n        const newMessages = [...this.state.messages];\r\n        const newReplies = [...newMessages[newMessageIndex].replies];\r\n        const newReplyIndex = newReplies.findIndex(el => el._id === reply._id);\r\n        newReplies[newReplyIndex] = { ...newReplies[newReplyIndex], text: newText, updating: true };\r\n\r\n        newMessages[newMessageIndex] = {\r\n            ...newMessages[newMessageIndex], replies: [...newReplies]\r\n        };\r\n\r\n        this.setState({ messages: [...newMessages] });\r\n\r\n        httpHelper.put(`replies/${reply._id}`, { text: newText }, this.user.token)\r\n            .then(newReply => {\r\n                newReplies[newReplyIndex] = { ...newReplies[newReplyIndex], ...newReply, updating: false };\r\n\r\n                newMessages[newMessageIndex] = {\r\n                    ...newMessages[newMessageIndex], replies: [...newReplies]\r\n                };\r\n\r\n                this.setState({ messages: [...newMessages] });\r\n            }).catch(err => {\r\n                alert(err);\r\n                this.setState(oldState);\r\n            });\r\n    }\r\n\r\n    deleteReply = (message, reply) => {\r\n        if (!window.confirm('Are you sure you want to delete this reply?')) return;\r\n\r\n        const oldState = { ...this.state };\r\n        const newMessageIndex = this.state.messages.findIndex(el => el._id === message._id);\r\n        const newMessages = [...this.state.messages];\r\n        const newReplies = [...newMessages[newMessageIndex].replies];\r\n        const newReplyIndex = newReplies.findIndex(el => el._id === reply._id);\r\n        newReplies[newReplyIndex] = { ...newReplies[newReplyIndex], updating: true };\r\n\r\n        newMessages[newMessageIndex] = {\r\n            ...newMessages[newMessageIndex], replies: [...newReplies]\r\n        };\r\n\r\n        this.setState({ messages: [...newMessages] });\r\n\r\n        httpHelper.delete(`replies/${reply._id}`, this.user.token)\r\n            .then(_ => {\r\n                newReplies.splice(newReplyIndex, 1);\r\n\r\n                newMessages[newMessageIndex] = {\r\n                    ...newMessages[newMessageIndex], replies: [...newReplies]\r\n                };\r\n\r\n                this.setState({ messages: [...newMessages] });\r\n            }).catch(err => {\r\n                alert(err);\r\n                this.setState(oldState);\r\n            });\r\n    }\r\n\r\n    createRely = (messageId, reply) => {\r\n        const oldState = { ...this.state };\r\n        const newMessageIndex = this.state.messages.findIndex(el => el._id === messageId);\r\n        const newMessages = [...this.state.messages];\r\n        const replies = [...newMessages[newMessageIndex].replies];\r\n        newMessages[newMessageIndex] = {\r\n            ...newMessages[newMessageIndex], replies: [{\r\n                _id: Date.now(),\r\n                text: reply,\r\n                user: this.user,\r\n                updating: true\r\n            }, ...replies]\r\n        };\r\n\r\n        this.setState({ messages: [...newMessages] });\r\n\r\n        httpHelper.post(`message/${messageId}/replies`, { text: reply }, this.user.token)\r\n            .then(newReply => {\r\n                newMessages[newMessageIndex] = {\r\n                    ...newMessages[newMessageIndex], replies: [{ ...newReply }, ...replies]\r\n                };\r\n                this.setState({ messages: [...newMessages] })\r\n            }).catch(err => {\r\n                alert(err);\r\n                this.setState(oldState);\r\n            });\r\n    }\r\n\r\n    toggleModal = () => this.setState({ showModal: !this.state.showModal });\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.showModal &&\r\n                    <Modal onClose={this.toggleModal}>\r\n                        <MessageWriter initialMessage='' height='80' onSave={(message) => {\r\n                            this.createMessage(message);\r\n                            this.toggleModal();\r\n                        }} />\r\n                    </Modal>\r\n                }\r\n                <NavBar onLogout={this.context.logout} onWriteMessage={this.toggleModal} userName={this.user ? this.user.name : ''} />\r\n                <div className='content-wrapper-scroll' >\r\n                    <div className='content-wrapper'>\r\n                        <MessageWriter initialMessage='' height='80' onSave={this.createMessage} />\r\n                        {this.state.messages.map(message => (\r\n                            <Message\r\n                                loading={message.updating}\r\n                                loadingReplies={message.loadingReplies}\r\n                                showControls={message.user_id === this.user._id}\r\n                                key={message._id}\r\n                                messageWithReplies={message}\r\n                                onLoadReply={this.loadReplies}\r\n                                onMessageDelete={this.deleteMessage}\r\n                                onMessageUpdate={this.updateMessage}\r\n                                onReplyCreate={this.createRely}\r\n                                onReplyDelete={(reply) => this.deleteReply(message, reply)}\r\n                                onReplyUpdate={(text, reply) => this.updateReply(message, text, reply)}\r\n                                showReplyControls={(reply) => reply.user_id === this.user._id}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport { UserContext } from './logic/context/user-context';\nimport Authntication from './screens/Authentication';\nimport GuestBook from './screens/GuestBook';\nimport { Loading } from './components/Loading/Loading';\n\n\nfunction App() {\n  const userContext = React.useContext(UserContext);\n  return (\n    <>\n      {\n        userContext.loading ? <Loading /> :\n          (\n            userContext.user ?\n              <GuestBook />\n              :\n              <Authntication />\n          )\n      }\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport { UserContext } from './user-context';\r\nimport { httpHelper } from '../HttpHelper';\r\n\r\nexport const UserContextProvider = (props) => {\r\n    const [user, setUser] = React.useState(null);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [loginError, setLoginError] = React.useState(null);\r\n    const [signupError, setSignupError] = React.useState(null);\r\n    const [sinupSuccess, setSignupSuccess] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        const token = localStorage.getItem('1589392512240token1589392512240');\r\n        if (token) {\r\n            getUser(token);\r\n        }\r\n    }, []);\r\n\r\n    const getUser = async (token) => {\r\n        try {\r\n            setLoading(true);\r\n            const user = await httpHelper.get('me', token);\r\n            setUser(user);\r\n        } catch (error) {\r\n            setUser(null);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const register = async (name, email, password) => {\r\n        setLoading(true);\r\n        try {\r\n            await httpHelper.post('register', { name, email, password });\r\n            setSignupSuccess('New account is created you can use it to login');\r\n        } catch (error) {\r\n            setSignupError(error.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const login = async (email, password) => {\r\n        setLoading(true);\r\n        try {\r\n            const user = await httpHelper.post('login', { email, password });\r\n            setUser(user);\r\n            localStorage.setItem('1589392512240token1589392512240', user.token);\r\n        } catch (error) {\r\n            setLoginError(error.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const logout = async () => {\r\n        setLoading(true);\r\n        try {\r\n            await httpHelper.post('logout', {}, user.token);\r\n            setUser(null);\r\n            localStorage.removeItem('1589392512240token1589392512240');\r\n        } catch (error) {\r\n            alert(error.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={{\r\n            user,\r\n            loading,\r\n            loginError,\r\n            signupError,\r\n            sinupSuccess,\r\n            register,\r\n            logout,\r\n            login,\r\n        }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { UserContextProvider } from './logic/context/UserContextProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserContextProvider>\n      <App />\n    </UserContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}